#!/bin/sh /etc/rc.common
# Copyright (C) 2010 OpenWrt.org

START=71
NOLOCK=1

BIN=/usr/sbin/proftpd
RUN_D=/var
PID_F=$RUN_D/proftpd.pid
RUN_USER=guest
RUN_GROUP=$RUN_USER

EXTRA_COMMANDS="suspend resume"
EXTRA_HELP="	suspend	Suspend the service
	resume	Resume the service"
# FTP setup
FTP_HOME=/tmp/ftp
PROFTPD_CFG_FILE="/etc/proftpd/proftpd.conf"
PROFTPD_CFG_ORIG="/etc/proftpd/proftpd.conf.orig"
SFTP_CFG_FILE="/etc/proftpd/sftp.conf"
EMMC_DEVICE=mmcblk0
DEVICE_PATH=/dev/$EMMC_DEVICE
EMMC_FTP=/tmp/ftp/F

# SFTP set up
adminname="$(uci_get usbshare.account.username)"
guestname="$(uci_get usbshare.account1.username)"
SFTP_SUPPORT="$(uci -q -c /etc/profile.d get profile.@sftp[0].sftp_support)"
SFTP_HOME=/tmp/sftp 
auth="$(uci_get usbshare.global.auth_all)"
limit_dir="/etc/proftpd/limit_dir.conf"
SFTP_ADMIN="$(uci_get usbshare.account.username)"
SFTP_CFG_ORIG_FILE="/etc/proftpd/sftp.conf.orig"
SFTP_CFG_FILE="/etc/proftpd/sftp.conf"

ssh=/etc/ssh
key=/etc/ssh/ssh_host_rsa_key


boot() {
    if [ -f $PROFTPD_CFG_ORIG ]
    then
        cp -f $PROFTPD_CFG_ORIG $PROFTPD_CFG_FILE
    fi
}

ftp_add_emmc() {
	# Mount emmc for ftp
	if mount | grep "${DEVICE_PATH}" 1>/dev/null 2>&1; then
		echo "EMMC ${DEVICE_PATH} already be mounted" > /dev/null;
	else
		# try mount
		[ -d /mnt/mmcblk0 ] || (mkdir -p /mnt/mmcblk0 -m 0777)
		mount -t tntfs -o umask=0000,rw $DEVICE_PATH /mnt/mmcblk0 1>/dev/null 2>&1
		if [ $? -ne 0 ]; then
			echo "EMMC: mount /mnt/mmcblk0 failed!" > /dev/null;
			return 0;
		fi
	fi
	[ -d /tmp/ftp/F ] || (mkdir -p /tmp/ftp/F -m 0755)
	mount -O bind /mnt/mmcblk0 /tmp/ftp/F 1>/dev/null 2>&1
	if mount | grep "$EMMC_FTP" 1>/dev/null 2>&1; then
		local auth="$(uci_get usbshare.global.auth_all)"
		if [ x"$auth" == x"on" ]; then
			cat <<EOT >> $PROFTPD_CFG_FILE

<Directory /tmp/ftp/F>
    AllowGuestNetwork on
    <Limit DIRS READ>
        AllowUser admin,guest
    </Limit>
    <Limit WRITE>
        AllowUser admin
    </Limit>
    <Limit All>
        DenyAll
    </Limit>
</Directory>
EOT
		else
			cat <<EOT >> $PROFTPD_CFG_FILE

<Directory /tmp/ftp/F>
    AllowGuestNetwork on
    <Limit DIRS READ>
        AllowUser admin,guest
    </Limit>
    <Limit WRITE>
        AllowUser admin,guest
    </Limit>
    <Limit All>
        DenyAll
    </Limit>
</Directory>
EOT
		fi
	else
		echo "mount ftp error" > /dev/null
	fi
}

ftp_check_enable() {
	local ftp_en="$(uci_get usbshare.global.ftp)"
	local ftpex_en="$(uci_get usbshare.global.ftpex)"
	local mode="$(uci_get sysmode.sysmode.mode)"
	if [ x"$mode" == x"ap" ];then
		[ -z "$ftp_en" -o "$ftp_en" = "off" ] && return 1
	else
		[ -z "$ftp_en" -o "$ftp_en" = "off" ] && [ -z "$ftpex_en" -o "$ftpex_en" = "off" ] && return 1
	fi
    	return 0
}

sftp_check_enable() {	
	local sftp_en="$(uci_get usbshare.global.sftp)"
    local sftpex_en="$(uci_get usbshare.global.sftpex)"
	local mode="$(uci_get sysmode.sysmode.mode)"
	if [ "$SFTP_SUPPORT" != "yes" ];then
		return 1
	fi
	if [ x"$mode" == x"ap" ];then
		[ -z "$sftp_en" -o "$sftp_en" = "off" ] && return 1
	else
		[ -z "$sftp_en" -o "$sftp_en" = "off" ] && [ -z "$sftpex_en" -o "$sftpex_en" = "off" ] && return 1
	fi
    	return 0
}

start() {
    local tpfile_support
	config_load "profile"
	config_get tpfile_support tpfile_diff tpfile_support "no"

	mount | grep /mnt/sd > /dev/null 2>&1 || return 1
        local tmpfile=`mktemp -t tmp.XXXXXX`
        local hostname="$(uci_get usbshare.global.svrname)"

        usbshare export ftp -o $tmpfile
        if [ $? -eq 0 ]
        then
        	sed -e "s#|HOSTNAME|#$hostname#g" $PROFTPD_CFG_ORIG > $PROFTPD_CFG_FILE
        	cat $tmpfile >> $PROFTPD_CFG_FILE
        	if [ "$tpfile_support" = "yes" ]; then
			ftp_add_emmc
		fi
		rm -f $tmpfile
        else
        	echo "usbshare export ftp failed. ProFTPD will start with default configuration."
        	rm -f $tmpfile
        fi

	[ -d $FTP_HOME ] || ( mkdir -p $FTP_HOME && chown $RUN_USER:$RUN_GROUP $FTP_HOME )

	if [ -f $PID_F ] 
        then 
        # case stop function didn't kill process
        	TMP_PID=$(cat $PID_F)
        	kill -9 $TMP_PID 1>/dev/null 2>&1
        	rm -f $PID_F
        fi

	if [ "$SFTP_SUPPORT" == "yes" ] ;then
		[ -d $ssh ] || { 
			mkdir -p $ssh 
			genkey
			chmod -R 700 $ssh 
		}
		
		[ -f /etc/ban.tab ] || ( touch /etc/ban.tab )
		chmod -R 644 /etc/ban.tab

		cat /dev/null > $SFTP_CFG_ORIG_FILE
		echo "Include             /etc/proftpd/sftp.conf" >> $SFTP_CFG_ORIG_FILE
		echo "Include             /etc/proftpd/limit_login.conf" >> $SFTP_CFG_ORIG_FILE
		echo "Include             /etc/proftpd/limit_dir.conf" >> $SFTP_CFG_ORIG_FILE
		usbshare export sftp -o $tmpfile
		if [ $? -eq 0 ] ;then
			cat /dev/null > $limit_dir
			cat $tmpfile >> $limit_dir
			rm -f $tmpfile
			sed -i "s/\<admin\>/$adminname/g" $limit_dir
			sed -i "s/\<guest\>/$guestname/g" $limit_dir
		fi
	fi

	if ftp_check_enable && sftp_check_enable ;then
		del_limit_ftp_login
		sed -i "s/SFTPEngine off/SFTPEngine on/g" $SFTP_CFG_FILE
		$BIN
	elif ftp_check_enable || sftp_check_enable ;then
		if ftp_check_enable ;then
			sed -i "s/SFTPEngine on/SFTPEngine off/g" $SFTP_CFG_FILE
			del_limit_ftp_login
			$BIN
		elif sftp_check_enable ;then
			del_limit_ftp_login
			limit_ftp_login
			sed -i "s/SFTPEngine off/SFTPEngine on/g" $SFTP_CFG_FILE
			$BIN
		fi
	else
		return 1
	fi
}

stop() {
	[ -f $PID_F ] && kill $(cat $PID_F)
}

reload() {
	[ -f $PID_F ] && kill -HUP $(cat $PID_F)
}

suspend() {
	echo "Suspending NOW"
	ftpshut now "Maintenance in progress"
}

resume() {
	[ -f /etc/shutmsg ] && {
		echo "Allowing sessions again"
		ftpshut -R > /dev/null
	}
}

del_limit_ftp_login(){
	sed -i "/<Limit LOGIN>/,/<\/Limit>/d" $PROFTPD_CFG_FILE
}

limit_ftp_login(){
	sed -i '$a\<Limit LOGIN>' $PROFTPD_CFG_FILE
	sed -i '$a\    DenyAll' $PROFTPD_CFG_FILE
	sed -i '$a\</Limit>' $PROFTPD_CFG_FILE
}

genkey(){
	openssl genrsa -out $key 2048	
}
